# Titanic Survival Prediction Starter Script

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sqlalchemy import create_engine
pip install sqlalchemy psycopg2-binary


# Titanic Survival Prediction using train.csv + PostgreSQL export

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sqlalchemy import create_engine

# --- Load training data ---
df = pd.read_csv('/mnt/data/train.csv')  # Uploaded training dataset

# --- Drop irrelevant columns ---
df.drop(columns=['PassengerId', 'Name', 'Ticket', 'Cabin'], inplace=True)

# --- Fill missing values ---
df['Age'].fillna(df['Age'].median(), inplace=True)
df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)

# --- Encode categorical variables ---
df['Sex'] = LabelEncoder().fit_transform(df['Sex'])        # Male=1, Female=0
df['Embarked'] = LabelEncoder().fit_transform(df['Embarked'])  # S=2, C=0, Q=1

# --- Normalize numerical features ---
scaler = StandardScaler()
df[['Age', 'Fare']] = scaler.fit_transform(df[['Age', 'Fare']])

# --- Features & target ---
X = df.drop('Survived', axis=1)
y = df['Survived']

# --- Train/test split ---
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# --- Train Logistic Regression model ---
model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

# --- Evaluate model ---
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# --- Save cleaned training data to PostgreSQL ---
# Fill in your credentials here
db_user = 'your_username'
db_password = 'your_password